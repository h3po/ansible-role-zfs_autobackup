---
- name: set up ssh for push mode on the source machine
  ansible.builtin.include_tasks: sshclient.yml
  when: zfs_autobackup_mode == "push"

- name: set up ssh for pull mode on the source machine
  ansible.builtin.include_tasks: sshserver.yml
  when: zfs_autobackup_mode == "pull"

- name: make sure the zfs volumes exist
  community.general.zfs_facts:
    dataset: "{{ item }}"
    properties: name
  loop: "{{ zfs_autobackup_source_datasets.keys() }}"

- name: set the zfs properties to configure zfs-autobackup
  community.general.zfs:
    name: "{{ item['key'] }}"
    state: present
    extra_zfs_properties: "{{ [('autobackup:%s' % zfs_autobackup_job_name,\
                           item['value']),] | community.general.dict }}"
  loop: "{{ zfs_autobackup_source_datasets | dict2items }}"
  loop_control:
    label: "{{ item['key'] }}"

- name: give zfs permissions to the zfs-autobackup user
  community.general.zfs_delegate_admin:
    name: "{{ item }}"
    users: "{{ zfs_autobackup_user }}"
    permissions: "{{ zfs_autobackup_source_permissions }}"
  loop: "{{ zfs_autobackup_source_permissionroots }}"

- name: create sudo exceptions for the pre_snapshot commands
  ansible.builtin.template:
    src: pre_snapshot_sudo.j2
    dest: "/etc/sudoers.d/zfs-autobackup_{{ zfs_autobackup_job_name }}"
    owner: root
    mode: 0440
